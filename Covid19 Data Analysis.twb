<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='global_covid_data' inline='true' name='federated.0ielfkm13lxv0q1627n0v11aosiq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_covid_data' name='textscan.1fisfhu1whwbm213n60wh0bzqe2a'>
            <connection class='textscan' directory='C:/Users/sidii/Desktop/Data Analysis Project' filename='global_covid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1fisfhu1whwbm213n60wh0bzqe2a' name='global_covid_data.csv' table='[global_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='Last Update' ordinal='0' />
            <column datatype='string' name='Country Region' ordinal='1' />
            <column datatype='string' name='Iso3' ordinal='2' />
            <column datatype='real' name='Lat' ordinal='3' />
            <column datatype='real' name='Long' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Active' ordinal='7' />
            <column datatype='integer' name='Recovered' ordinal='8' />
            <column datatype='real' name='Mortality Rate' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1fisfhu1whwbm213n60wh0bzqe2a' name='global_covid_data.csv' table='[global_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='Last Update' ordinal='0' />
            <column datatype='string' name='Country Region' ordinal='1' />
            <column datatype='string' name='Iso3' ordinal='2' />
            <column datatype='real' name='Lat' ordinal='3' />
            <column datatype='real' name='Long' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Active' ordinal='7' />
            <column datatype='integer' name='Recovered' ordinal='8' />
            <column datatype='real' name='Mortality Rate' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Region]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Country Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Iso3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Iso3]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Iso3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality Rate]</local-name>
            <parent-name>[global_covid_data.csv]</parent-name>
            <remote-alias>Mortality Rate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='global_covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82]' role='measure' type='quantitative' />
      <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Recovered:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Region:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#7c7270'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;US&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='global_covid_data.csv' id='global_covid_data.csv_D57A24D841AF4E7CB016D73C7E234F82'>
            <properties context=''>
              <relation connection='textscan.1fisfhu1whwbm213n60wh0bzqe2a' name='global_covid_data.csv' table='[global_covid_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' name='Last Update' ordinal='0' />
                  <column datatype='string' name='Country Region' ordinal='1' />
                  <column datatype='string' name='Iso3' ordinal='2' />
                  <column datatype='real' name='Lat' ordinal='3' />
                  <column datatype='real' name='Long' ordinal='4' />
                  <column datatype='integer' name='Confirmed' ordinal='5' />
                  <column datatype='integer' name='Deaths' ordinal='6' />
                  <column datatype='integer' name='Active' ordinal='7' />
                  <column datatype='integer' name='Recovered' ordinal='8' />
                  <column datatype='real' name='Mortality Rate' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed vs Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Confirmed vs Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_covid_data' name='federated.0ielfkm13lxv0q1627n0v11aosiq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ielfkm13lxv0q1627n0v11aosiq'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Active])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' />
              <size column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Active:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]</rows>
        <cols>[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{30CA4BF5-1925-409F-AB7E-1CCFF407B9B1}' />
    </worksheet>
    <worksheet name='Death Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Top 10  Deaths Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_covid_data' name='federated.0ielfkm13lxv0q1627n0v11aosiq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ielfkm13lxv0q1627n0v11aosiq'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]' value='n#,##0,.00K;-#,##0,.00K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d3e5e6</color>
                <color>#b8dadb</color>
                <color>#9ecfd0</color>
                <color>#86c4c5</color>
                <color>#70b9bb</color>
                <color>#5baeb0</color>
                <color>#49a3a5</color>
                <color>#38989a</color>
                <color>#288d8f</color>
                <color>#1b8385</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]' />
              <color column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]' />
              <text column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' />
              <text column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6D2C7BB8-F8E6-4006-A8C3-9648BB0C1F7F}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_covid_data' name='federated.0ielfkm13lxv0q1627n0v11aosiq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ielfkm13lxv0q1627n0v11aosiq'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0ielfkm13lxv0q1627n0v11aosiq].[Latitude (generated)]</column>
            <column>[federated.0ielfkm13lxv0q1627n0v11aosiq].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' />
              <lod column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Active:qk]' />
              <lod column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ielfkm13lxv0q1627n0v11aosiq].[Latitude (generated)]</rows>
        <cols>[federated.0ielfkm13lxv0q1627n0v11aosiq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C1FD56DC-7D5A-411F-ABB2-4CFE4705D781}' />
    </worksheet>
    <worksheet name='Mortality Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Mortality Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_covid_data' name='federated.0ielfkm13lxv0q1627n0v11aosiq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ielfkm13lxv0q1627n0v11aosiq'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Mortality Rate]' role='measure' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mortality Rate]' derivation='Sum' name='[sum:Mortality Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Mortality Rate:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</rows>
        <cols>[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Mortality Rate:qk]</cols>
      </table>
      <simple-id uuid='{216D4804-B44B-4157-80E5-959829A7A68B}' />
    </worksheet>
    <worksheet name='Recovery Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Top 10 Recovery Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_covid_data' name='federated.0ielfkm13lxv0q1627n0v11aosiq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ielfkm13lxv0q1627n0v11aosiq'>
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Avg' name='[avg:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' />
              <size column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[avg:Recovered:qk]' />
              <text column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4C36ABB5-B252-4B9D-AABB-4CD12A15A839}' />
    </worksheet>
    <worksheet name='Top 10 Confirmed Cases (Countries)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Top 10 Confirmed Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_covid_data' name='federated.0ielfkm13lxv0q1627n0v11aosiq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ielfkm13lxv0q1627n0v11aosiq'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Region]' derivation='None' name='[none:Country Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country Region:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;US&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Burma&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Korea, South&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Taiwan*&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Diamond Princess&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Holy See&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;MS Zaandam&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Micronesia&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Confirmed:qk]</rows>
        <cols>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</cols>
      </table>
      <simple-id uuid='{C153E517-E873-4901-B234-642EE9285CF1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid19 Data Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Covid19 Data Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='22' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='5758' id='23' type-v2='title' w='99034' x='483' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92362' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='6698'>
              <zone h='92362' id='6' type-v2='layout-basic' w='89378' x='483' y='6698'>
                <zone h='46175' id='3' name='Global Cases' w='22345' x='45163' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46187' id='11' name='Death Cases' w='34214' x='483' y='52873'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46187' id='13' name='Recovery Cases' w='22571' x='34697' y='52873'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46175' id='14' name='Top 10 Confirmed Cases (Countries)' w='44680' x='483' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46187' id='15' name='Confirmed vs Deaths' w='32593' x='57268' y='52873'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46175' id='18' name='Mortality Rate' w='22353' x='67508' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92362' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='6698'>
                <zone h='8578' id='12' name='Death Cases' pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]' type-v2='color' w='9656' x='89861' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28202' id='16' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' type-v2='color' w='9656' x='89861' y='15276'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='15864' id='17' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Active:qk]' type-v2='size' w='9656' x='89861' y='43478'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#000000'>Covid19 Data Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='30' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone h='5758' id='23' type-v2='title' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46175' id='14' is-fixed='true' name='Top 10 Confirmed Cases (Countries)' w='44680' x='483' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46175' id='3' is-fixed='true' name='Global Cases' w='22345' x='45163' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46175' id='18' is-fixed='true' name='Mortality Rate' w='22353' x='67508' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46187' id='11' is-fixed='true' name='Death Cases' w='34214' x='483' y='52873'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='12' name='Death Cases' pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]' type-v2='color' w='9656' x='89861' y='6698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46187' id='13' is-fixed='true' name='Recovery Cases' w='22571' x='34697' y='52873'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46187' id='15' is-fixed='true' name='Confirmed vs Deaths' w='32593' x='57268' y='52873'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28202' id='16' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' type-v2='color' w='9656' x='89861' y='15276'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15864' id='17' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Active:qk]' type-v2='size' w='9656' x='89861' y='43478'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B45F94C4-B73B-48D5-A5B6-EEEC9BDB44D1}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 10 Confirmed Cases (Countries)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90120F81-4FA2-4AF7-86B0-04A187062C72}' />
    </window>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9F7CDBC-2998-4789-800B-9100871C741B}' />
    </window>
    <window class='worksheet' name='Death Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A536705-DC3F-41F2-80BD-50E8F48714D1}' />
    </window>
    <window class='worksheet' name='Recovery Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE619132-A88B-4C5B-8835-7F22A67138DA}' />
    </window>
    <window class='worksheet' name='Confirmed vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[sum:Active:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0461268-007F-4C35-AEA4-E3733F571B85}' />
    </window>
    <window class='worksheet' name='Mortality Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52E8E4E2-5ABF-4B0A-A17B-57C9283A457B}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid19 Data Analysis'>
      <viewpoints>
        <viewpoint name='Confirmed vs Deaths'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ielfkm13lxv0q1627n0v11aosiq].[none:Country Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Death Cases' />
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mortality Rate' />
        <viewpoint name='Recovery Cases' />
        <viewpoint name='Top 10 Confirmed Cases (Countries)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='23' />
      <simple-id uuid='{971C7B7C-6EC9-4097-A092-08933F2C1CCE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed vs Deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWMElEQVR4nO3dSW8ceZrf8W9EZEbuK5PJJUntLJVKKqlUcGOWHs94TmPAhuGLLwbsi9+D
      Tz703YBfgA/GXOZswOODbdiwp8Zud5Wnu1RSaeGWXJJMkrnvS6w+UAtVoroYokgmFc8HEASS
      DyOfZOSPGRl84p+K67ouQviUetENCHGRzjQAtm1PRO1Jn+Qcx8FxnBPVuq47MffvU649i313
      tI+JeQbwciR2VrVeTULPUnu6bU9MAIS4CBIA4WsBL8WuY/Lo+0ekpgtoVo/+yGJxcZFicZ14
      Jk8kCCHFQY3nyMTDZ9WzEB+NxwA4KCgY4zFhxcE2DarVKos3Pqe2V6JWb2CpCR7OFLBt29OL
      mEl40fWq15O+mJqEnj/lWi8val3Xff3PSx+eAoDrsnjjM0pbG0xfWSATb1GsGLiBJoZlE0/n
      sIYD+oZNPHS4aU3TTrz5QODk7Xip1TQNRVF+tu7VD1xVf/7I8NUP+qx6llqwLMvTvnNd1/Pj
      zVMAlEAIc1Dh2s0lQopJZRDlqy9nqe6Xmbt5E9W10YMBRoaF12wJcRG8BUBRmC1cef3x1XgK
      gPxc4eVnggBEI/LgFxOiW4b9H0BRYe5riE2/9WV5pIpPV2cHHv0l2Mbhx/vfw8N/9VYI5DSo
      +HTt/r83D34Ac3AYgiMkAOLT5R5zFuknZ4kkAOLTNfc1KEfOCmk6zNx/q0ReA4hPV+Y6PPiX
      h4c9igrzv4DE3FslEgDxactcP/z3HnIIJHxNAiB8TQIgfE0CIHzNWwBch631VYrbZaxxn43t
      XVzXpVzapDcyGAwG2OaYwXB8Ru0K8XF5CoBjjdmvNZnOZVld2ySjGzx7sYahxdhcX2f/YI+1
      lRXUYPCs+hXio/I8DXr3i89ZXV4mGouSyiZ5sVFibmERo9ei16phKnFCmiLXA0jtqWsn7noA
      1xqzvV0iFI2Tjmr88GyHu/eX2FxbJp7Nk0zGiQQUau0B0+kYINcDHCW13mon7noANRjhi7t3
      X388s3D4/5cPHnjZjBATQ84CCV+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MA
      CF/zfE2w6zqYloOmuIzGBuFIFMscEwjq4LqoioLjgqZJtsTk8xyA8tY6240R2TCEognSiShb
      5SpaQCcaVlEtg0zhJqmofhb9CvFReQqA0W9SqnSxbYP0bIHK/h6tboKr129RK28fjkOrCa5G
      gjIOLbWnrp24cWgtFOP20nU2traxLAtXUchmMxRXnhFNpEllZwgpDtX2gLyMQ79Dar3VTtw4
      tBbQyWR0MpkMAIUrh+utXCnMetmMEBNDXqkKX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MA
      CF+TAAhfkwAIX5MACF/zPA7d2N9mvdJnNq5Ra3ZYvHGT0uYm0eQUUR10xSaYniMbD59Fv0J8
      VJ4CYJsjaj2bmK4wtBUePrjJr7/d4M6Du9TK2zRrDUw1wdeFkIxDS+2payduHNo2x5jjATt7
      B1yZzVNc32GmME15t4TruMTTORRzTHtgkI6FABmHPkpqvdVO3Di0Hk1x926KpaUlAqpCpz8i
      lYzT73bQo3EU1yGgqZj2yZMrxEX6oPcJ1vXDyx3TqcN3goknUy+/cpg+XT15CoW4SHIWSPia
      BED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiap1EI17HZXF8jmJgiFrDYqzS4
      enOJ6u4mqVyBgGITCiqMnSCJaOisehbio/E2C6QozC4s8mJ5lbozJpqexWwfEIhPs7e7TUjX
      GA9HLN2593pa8qTjqWdZ66Xey0it1z6k1nvtWffhKQCKotKuV1DVIHcf3MdsbPN9scFnt6cY
      aCqDXgvDiaCph+Opr0ZUT8LL7PdZ1XoN7ST0LLWHPnTfKa6HyNjmkOWVIkowQiqiUmt2uH5r
      iVJxlcTUPOGgS0xXGThhcukYtm2feD7bsixPc+JnNVMOJ78ewLbtM+tZas/2eoBXfXhbHj0Y
      4Yu7d19/PL94+P8X9+6/VRf1slEhLpCcBRK+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQ
      viYBEL4mARC+9t5RiN/97u+o720RzN7gH/zRQ+Bw/qVRqxCMJonpKo3OgFw2TbtZJ5JIv1wa
      UcG0FUL6By06J8S5eu+jNGAPSRduk4zFXn/OdW0cV2F1ZZl4KEg0rLLWauO4YO7XiUYCOOMR
      c9dvI1cDiMvgvQEYjUbslFa4fuer159T1QDmsIOrBCCos7iY49ffvVkevdeqYSpxbuqaLI8u
      taeuvbDl0cubK7woliksLBAN6W++yRzS6o0JKArRoML3T4rcuXeLrdVnxNI5svkCEdWl2h6Q
      Tx8+c8jy6G9IrbfaC1sePTe7yJ/8fY1sNstgOH79+Z+OQy9eO/w/8/DhiW9UiEly7K86e9Tm
      r//6P/HNN99QOmied09CnJtjAxBJz/Lnf/wLxqMBqoenNiEum/cf7IYSJCMKo8HoHNsR4ny9
      99f7TCaGGvp75LNT59mPEOfqvQFY3dzFdcfUK1Xy0390nj1dfsMm2AbEZy66E/Ezjj0Ecl2H
      ZNDlxxclPv/y/nEl4vfp7EBz/aK7ECdw7DPAi0ffMgrl+LM/jLOxsc3Mwzvn3dfllr930R2I
      Ezo2AM1mnb1mGYBwKgdIADw5wR9uxGQ4NgB/8Gf/EMs6/FOxpslpUPHpOvbRrWkBeeALX/D2
      KHdd6tU93GCCiGaxV6lTuHKdbn2feDaP6loEAxqGBZGw/vPbE+KCeQqA41i4aphyaRNVsclO
      z2N2KnRNlcr6OtFIEGs4ZHFJXjOIy8Hb6tBqgF6rwvTcAulogGalxIumw62lW9ij3utx6HBA
      lXFoqT117YWNQ7/3m4wu5UqbaTWKO7KptUfcuHaDUvEF8UyeXCJGVINae8C0jEO/Q2q91Z7H
      OLSn5dG9kuXR3+5DaidveXS5KF74mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPia
      BED4mgRA+Jq3cWjbZHV5BYMguXiAg3qbG0u32FhfJ57OE9EhpDio8RyZePisehbio/E8Dn1l
      sUBxt0p3ZPPg7lV+89s1bt+7Q22vRK3RwFITPJwpyDi01J66duLGoR17xEpxh8/v3GZjdYVa
      pUF6Kkmz2cSwbOLpHNZwQN+wiYcONy3j0G9IrbfaC1sd+n0UVBKxMPsHNW4t3WC/1uHzpTzV
      /TJzN2+iujZ6MMDIsPB6taUQF8HTo1QNhLhx69brjxfmIwDk5wovPxMEIBqRB7+4HOQskPA1
      CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1TzMLruuytfojqYUvMJq71Ns9
      rl6/wXZxldR0gVDAJRIAQ42RlnFocQl4fn+AuA69sUO/1QAlTLdRIbdwi8Z+iZY5wHCC3P/y
      CxzH8TTO6jjOiUdlvdaeZJoQ3kx4nnSk9ix7ltrD/XDSx5CXUeijfXi8HkAlHA4zBK7fugOD
      Ct+vtbh6I43jugR1HXtoYTsQUBUURTnxg28Sao9+z0X2IbXea49+j5dte7wewKBU6eOESoRT
      YarNAV8/vEOpuEZupoCu2kRDAXr9IZlkFEVRTjRbD4eJPKvak/4gvV4PMCn371OuPYt9d7QP
      b+PQms6d+1+9/nh69vD/m599/lZdRg7/xSUhZ4GEr0kAhK9JAISvXcprF23H5YedLpqicH8+
      hirvzC4+0KV8BhiYDi8qQ55XBoysk/+tQYifupTPAHFd4w+uJFAVhUjgUmZYTIhLGQBFgVu5
      yEW3IT4B8utT+JoEQPiaBED4mqcAuK5Lp35A33AYDzqsFbdxXIfS5jrt3oher4c5HtAbjM+q
      XyE+Km/PAK5DdWeNRt+muLnDTNLlx6erEM6ws71JpXrA2uo6ekj/aA1uddfpmd2Ptj0hjvI4
      Dq0xM5OnCWiBILFEjOF6i8KVKMOORq9Vw1RiBFQ+2vLo06E5AgSwLOtna71s9ziyPPpk1U7g
      8ugGW7t1jLDKfCbMkxd7fPngM4qrKySnZkmnk0R1lUZ7QC4dA06/PPqxC1i7NpqmoignewKT
      5dEvZ+15LI+uuF4uo/HItu0TN2RZ1ol+MO6wyfC//hvU9AKhP/3XKOrv377XHyKcPAC2bXva
      mVLrvfasAvCqj0t3Fsjp7GFv/1+s9f8J1uii2xGX3KX7S7A6fZvQP/p3aLEplGD0otsRl9yl
      C4CiaqhX/wTNwzGnEO9z6Q6BhPiYJj4A7riLXVvxtOSFECc18QEYf/NvGfzVP8Ntbl50K+IT
      NPEH0oGlv4BAGCUxe9GtiE/Q5Afg2i8JXPvlRbchPlETfwgkxFmSAAhfkwAIX/vg1wDrK88Y
      W1AozFMsbhBNZonqCjo2wcwcWVkeXVwCHxyAkK4zGHTYO6hxbekLauVtmrUGpprg64XQRxuH
      Ps9aGYeerNqJG4c+KhSJkbZGdG2F8k4J13WJp3Mo5pj2wCAdCwGnH4f+GLUyDn05a89jHPqD
      A5BOZ+iFYiykEvS7HfRoHMV1CGgqpi2LVYnL4YMDEAyFyYQOj/PjydTLzx6mT/+ZGX0hJoWc
      BRK+JgEQviYBEL4mARC+dq4B2Hm8wbDVP8+bFOL3OtcAJPJpAuHged6kEL/XuQYgNZshGNb5
      y2//PWvVlfO8aSGOdeoAONaIp08es12uUKlW6DQOaPbeXa5k2Nuj+Og/APDLG3/KbHLutDct
      xKmd+oKYZq3K7NUl6vs7tPpNbDXOVw9m3qkLRXMUPvsnACxNf/7O14W4CKd+BghqKoPhENOy
      iaezhFSL8U/et8u2bUzTIRTNnfbmhPioTh2ARG4Od9CkcOUq+elZbn/+Gcbo7UOgXrdLaWvz
      tDclxEd3JmuDuq6L4zg4jnOiyUrwto7oWdW+Gqe9TD1/yrWO46AoyommQT90353JRfGKory+
      k17GU8+qVlXVMxuHnoT79ynXnsW+O9rHma4K4aWZSag9yQ/6PPqQWu+1H7rvznR5dCEmnfar
      X/3qV2e2dddh5flTypUGyqhBuesSc/v8dnmbhdlpxv02y6trtAcGG8tPmZ5foPj0dxhaikT0
      3bdZqu1uslFpUy+tEUzkaOy+YL+rMpX66SrRLivPfqQ9tOkcrDMgid3ZZbncYXYq9ZNSi6c/
      PqF8UEcZNdnvQdTp8dvlEguzR85auQ4bz39H201htvdYXSsSikV49HiFhfk8v/n13zJTuIr2
      8pfWbvE5+x0H3R2ytl5kaDi8eP6C+cI8j7/7hnDuGuGXz7/VvRIb5Rr5XJbSxlPqHZXNlcek
      ZwpsPvkWIzxN4mVxq37As/USqbDKi7UN9HCEHx49plCY54fvviEy/Wa7lfI2G+U6UdXg2eoG
      g5HNxspTMjMFio9/gxmZIR7WXvdQ3NhE0QKsLK/QH9vsrT8nNDVPdfM5jRFkEodvetKqHbBe
      LDK2FA52t9g9qNOt72EGYoxaB2zs1chPZQEYdBqsrK3TG9lEAzZ/93gFxerR7FnoDHj0fJPC
      bB4Aa9Tj+fIqzc6AcbdO6aCBzoj1UoPplMb//u5Hri7OA+BYY5aXV9irtRh1qmyVdgnpCj88
      36GQT/K3v/6Oq1cWX+46h/WV55TKFRRnxPp6ET0S4dHjF2f8l2BrCJEMqViQoaEw6LXYr7eJ
      vtxBejTJ7HQGTVVJxQLslKsMRmMM493rRq1xn8bQRbXH6OEw9WqFwXCIZVjv1DKssV0b0u/3
      cAIJ+o0ytXafoHvM9agujMcG4/EYyw3Q77XYq3eIBn76xKhwtTDDwLBo9cY8+Ooetd1tMMc0
      6geMnSBHn0vn5uexbJN4OsdUOo6mKoQVk4Nag7Fhc/RM8dRMAdU1GXWbmGoQc2gQjuhUDqoM
      h/23rrBLZqYJBxU2t3ZQFej3+4Qw2a+/3O6Ru5h7uV3bNrAsm7FhEA4HqVSqDIcDjCPbzc3M
      E4/odPf3WbzzJa7RJ5xOUd0p0RuMsM03b3yYmsqTTkTQAjqLCwU0VQU9TKdepd0fo9pvaiOJ
      DPlsEk1V2Crtk4gEGVkq5qBDpdomrL85dNFCMQqzOVRVYXt7B2vYp2fYjAY9yrsVYvHQm72h
      6SwWZtFU9XDfmQamZWAMR9SqFQi8+QWqqCrJRJyxYdHqjrj/4B71cgnVNs44AFqQ8aBLfzBE
      0xTiAZeOpRFQD+90r75HteuwMJcnEM3S2l0hlcsfu6nRoM942GN37wACEaxehWA0dWwtwShT
      qSQB28QGgoyxtQjHHSU69hglFCcR0jBth3jAoWu/6fEVFzAtC9M0wTGpV/bRwkmm8nmePC2y
      MPN2L5ZpYhomlZ0NhkqU2ekMiekCm8+fMJ1/++8htmVhGgadbo9+t81+rYYeS9PeXSaWnf9J
      vzamYRAKBZienafXbpLMF9h4+oT8zPTb27VNTNOg3ewyf+0axrBHKJ6mWVomMfX2UpMba8tE
      s3PMzqWpH1QZmw4oIaxeBT2Rfat2b2sNJ5QhlwyyXCxx48Y1FCWAag8hGObo4XirskNrHGA+
      l2A4Ntgp7TA0LKK6Qs9UCB55BBrdGtvVAVcX54kmkuRTIbojm+lUiJ2WQeRIsWP0WN064Ma1
      RUaGw+Jcjm6vz0wuxfONKrlU5M2+cyz0aIqoZmKYJvXqAWooQTY/c/avAXrtBmM3SDISRNFU
      RoaDiks0GmHYb1PerxFPZUnFI9iWiR4K4bgqIf3d1+eu6zIcjVAVBdcyCUQimKZDNPzu4VKn
      WcNUQsTCQVQcHDWIY9tEI+8u19KqVxi7QTKJCKqmMjJcVByi0aM/RJvS9iYWQRbnZzioNinM
      5RibLqYxIhjQ0MNRXuWmvL3B0IJ0MkGr3SY9lScW1jFNg7CuQSBK8OXJkMreDt3BmNnCFaIh
      hdHIQVEcTNMkGg5ioRN6ufMb1X2anT5T+Vn6rQbTc3M4ln38dsslukODmfkCzeoBuZkCimu9
      2a6iEwocbrdeKdPqjpiZX2DYrhHLTKO6No5tEdRD2I5DOHT4G7jdqFJrdshkp+g06yh6hHwu
      SwAHSw2BPSYSOTwsHXSa7FUbJDM5prMphoMhiqoQ1BRGFqjYr2uNYY9S+YBoIs1UMky11Sc/
      lQI0RuMxAU15XWubI7ZLu2ihGPl0lEqzz8JcDsNWMccDAgHtda3rulT2dlBCCXLpGOX9GoW5
      PGPTkRfBwt/kghjhaxIA4WsSgAnjui4H5R36Q+O4r3KwV6bRbJ9kS3S7vY/d3idn4t8fwG+e
      fvu/MNJXuBYZsrP+jNj0FaxejWZnSD5m8lf/7Ue+vneTr77+itb+LsPRGDUYwjRsPrsxz9Pl
      Te4/uMvK0+959GyPf/HP/+lF36WJJgGYMOv7Lf7xH/457a0n7I2itP7P3zA2x1zP6gwS97j3
      1S+w+9s8Wi5yO6vzpNxFNTbJRgL8xx+/ZyYb47/85y3mvnhIPFy96Lsz8SQAE+aPH97hv/+P
      v+Hm1VkGlSLxqVkSVp94HHRdJxFVUZUEiZl55jIu2aqFZkM8ALeiSfqOxpc3kzwrrqCFIz9/
      gz4np0GFr8mLYOFr/x8v+PC/XGPdnAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Covid19 Data Analysis' width='192'>
      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
      LEZqLMb/Dw5C6gTRFpmcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death Cases' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mortality Rate' width='192'>
      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
      woGnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Recovery Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Confirmed Cases (Countries)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
